<Window x:Class="WPFAnimationSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFAnimationSample"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="BasicShadowBtnStyle" TargetType="Button">
                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="50"/>

                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Gray"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BasicAnimationBtnStyle" TargetType="Button" >

                <Setter Property="Width" Value="100"/>
                <Setter Property="Height" Value="50"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Name="ButtonGrid" Background="Transparent">
                                <Border
                                x:Name="border"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="8">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Bold">
                                    </ContentPresenter>
                                </Border>
                                <Grid.RenderTransform>
                                    <ScaleTransform />
                                </Grid.RenderTransform>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1.08"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>

                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation 
                                Duration="0:0:0.05"
                                Storyboard.TargetName="ButtonGrid"
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Textbox Property Trigger-->
            <Style x:Key="TextblockPropertyTrigger" TargetType="TextBox">
                <Style.Triggers>
                    <Trigger Property="TextBox.IsFocused" Value="True">
                        <Setter Property="TextBox.BorderThickness" Value="3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Textbox Event Trigger-->
            <!-- 마우스가 textbox에 들어가면 회색으로 바뀜-->
            <Storyboard x:Key="MouseEnterAnimation">
                <ColorAnimation
                    Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" 
                    To="LightGray" Duration="0:0:0.1"
                    />
            </Storyboard>
            <Storyboard x:Key="MouseLeaveAnimation">
                <ColorAnimation
                    Storyboard.TargetProperty="(TextBox.Background).(SolidColorBrush.Color)" 
                    To="White" Duration="0:0:0.1"
                    />
            </Storyboard>

            <!--Mouse가 textbox에 들어오고 나갈때 발생-->
            <Style x:Key="MouseEnterEventStyle" TargetType="TextBox">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="TextBox.MouseEnter">
                        <BeginStoryboard Storyboard="{StaticResource MouseEnterAnimation}"/>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="TextBox.MouseLeave">
                        <BeginStoryboard Storyboard="{StaticResource MouseLeaveAnimation}"/>
                    </EventTrigger>

                </Style.Triggers>
            </Style>

            <!-- textbox내 data를 보고 value와 같으면 setter값으로 set-->
            <Style x:Key="DataTriggerStyle" TargetType="TextBox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Bad">
                        <Setter Property="TextBox.Foreground" Value="Red" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <!--MultiDataTrigger -->
            <Style x:Key="MultiTrigger" TargetType="TextBox">
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="TextBox.Text" Value="Good"/>
                            <Condition Property="TextBox.IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="TextBox.Foreground" Value="LimeGreen"/>
                        <Setter Property="TextBox.FontWeight" Value="Bold"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            
            <!--MultiDataTrigger 2개의 조건을 확인하고 set-->
            <Style x:Key="MultiDataTrigger" TargetType="TextBox">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="Bad"/>
                            <!-- AND -->
                            <Condition Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="Bad"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="TextBox.Foreground" Value="Red"/>
                        <Setter Property="TextBox.FontWeight" Value="Bold"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>




        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <GroupBox BorderBrush="Black" BorderThickness="2" Header="BtnAnimation" Grid.ColumnSpan="2" Grid.Row="0">

            <StackPanel Orientation="Horizontal" Margin="10">
                <Button x:Name="ShadowBtn" Content="Shadow" Style="{StaticResource BasicShadowBtnStyle}" Margin="0 0 20 0"/>
                <Button x:Name="AniBtn" Content="Animation" Style="{StaticResource BasicAnimationBtnStyle}" Margin="0 0 20 0"/>

                <Button x:Name="WidthAnimation" Height="50" Width="100" HorizontalAlignment="Left" Content="WidthStretch" Margin="0 0 20 0">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="WidthAnimation"
                                                 Storyboard.TargetProperty="Width"
                                                 From="200" To="300" Duration="0:0:3"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

                <Button x:Name="ColorAnimation" Height="50" Width="100" HorizontalAlignment="Left" Content="ColorChange" Margin="0 0 20 0">
                    <Button.Background>
                        <SolidColorBrush x:Name="AniColor" Color="Red"/>
                    </Button.Background>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="AniColor"
                                                Storyboard.TargetProperty="Color"
                                                From="Red" To="Blue" Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackPanel>

        </GroupBox>


        <Label Content="PropertyTrigger" Grid.Column="0" Grid.Row="1" 
               VerticalAlignment="Center" Width="100" HorizontalAlignment="Left"
               Height="30"/>
        <TextBox    Grid.Row="1" Width="250" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderThickness="0"
                    Text="Textblock에 Focus가 가면 thickness가 바뀜"/>
        <TextBox Grid.Column="0" Grid.Row="1" Width="100" Height="30" Style="{StaticResource TextblockPropertyTrigger}"/>

        
        <Label Content="EventTrigger" Grid.Column="0" Grid.Row="2" 
               VerticalAlignment="Center" Width="100" HorizontalAlignment="Left"
               Height="30"/>
        <TextBox    Grid.Row="2" Width="300" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderThickness="0"
                    Text="Textblock에 Mouse가 들어오거나 나가면 바뀜"/>
        <TextBox Grid.Column="0" Grid.Row="2" Width="100" Height="30" Style="{StaticResource MouseEnterEventStyle}"/>

        
        
        <Label Content="DataTrigger" Grid.Column="1" Grid.Row="1" 
               VerticalAlignment="Center" Width="100" HorizontalAlignment="Left"
               Height="30"/>
        <TextBox    Grid.Row="1" Grid.Column="1" Width="300" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderThickness="0"
                    Text="Textblock의 Text가 Bad이면 foreground가 빨간색으로 바뀜"/>
        <TextBox Grid.Column="1" Grid.Row="1" Width="100" Height="30" Style="{StaticResource DataTriggerStyle}"/>

        <Label Content="MultiTrigger" Grid.Column="1" Grid.Row="2" 
               VerticalAlignment="Center" Width="100" HorizontalAlignment="Left"
               Height="30"/>
        <TextBox    Grid.Row="2" Grid.Column="1" Width="400" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderThickness="0"
                    Text="Textblock의 Text가 Bad이고 마우스가 Textbox안에 있으변 바뀜"/>
        <TextBox Grid.Column="1" Grid.Row="2" Width="100" Height="30" Style="{StaticResource MultiTrigger}"/>

        
        
        
        
        
        <Label Content="MultiDataTrigger" Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"
               VerticalAlignment="Center" Width="100" HorizontalAlignment="Left"
               Height="30"/>
        <TextBox    Grid.Row="3" Grid.ColumnSpan="2" Width="500" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left"
                    BorderThickness="0"
                    Text="Textblock의 Tag가 Bad이고 Textblock의 text가 Bad이면 foreground가 빨간색으로 바뀜"/>
        <TextBox Grid.Column="0" Grid.Row="3" Width="100" Height="30" Tag="Bad"
                 Style="{StaticResource MultiDataTrigger}"/>

    </Grid>
</Window>
